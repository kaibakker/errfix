== Introduction ==

*errfix* creates a software model of your system, based on a CSV file. This model can then be 'walked' automatically by errfix. 
 
== errfix Example: Google Search Homepages ==

This simple example creates a model and outputs a text description of a random walk. It doesn't run any tests.


=== The data: ===
The CSV file contents should be:

||Start/End||WEB||IMAGES||MAPS||SHOPPING||MAIL||
||WEB||||click_images||click_maps||click_shopping||click_mail||
||IMAGES||click_web|| ||click_maps||click_shopping||click_mail||
||MAPS||click_web||click_images|| ||click_shopping||click_mail||
||SHOPPING||click_web||click_images||click_maps|| ||click_mail||
||MAIL||click_web|| || || || ||

You can download the [http://sites.google.com/site/exploretesting/Home/google_searches.csv file here].

=== The code: ===
The example errfix Google Searches code is:

{{{
# errfix HelloWorld example.
# 
require 'rubygems'
require 'errfix'

# Create model,Load in the CSV file with our Google Searches model
google_searches = StateModelCreator.new.load_table 'google_searches.csv'

# Write the model's graph to the filesystem (PostScript format)
google_searches.create_dot_graph.output("google_searches.dot")

# Create a random walk across the model.
# Remember its random, so each time you run it, it might give you a different path...
google_searches.random_walk("WEB").steps.each do |a_transition|
  puts "Step:#{a_transition}"
end # end the walk
}}}


You can download [http://sites.google.com/site/exploretesting/Home/errfix_helloworld.rb errfix_helloworld.rb here].

===How to run the code:===
Place the above 2 files in the same folder, open a UNIX Terminal or DOS prompt in the same  folder and type:
{{{
ruby errfix_google_eg.rb
}}}

The output will look something like this:
{{{
Step:WEB,click_images => IMAGES
Step:IMAGES,click_web => WEB
Step:WEB,click_shopping => SHOPPING
Step:SHOPPING,click_web => WEB
Step:WEB,click_maps => MAPS
Step:MAPS,click_mail => MAIL
Step:MAIL,click_web => WEB
Step:WEB,click_mail => MAIL
Step:MAIL,click_web => WEB
Step:WEB,click_shopping => SHOPPING
Step:SHOPPING,click_web => WEB
Step:WEB,click_images => IMAGES
Step:IMAGES,click_web => WEB
Step:WEB,click_maps => MAPS
Step:MAPS,click_images => IMAGES
Step:IMAGES,click_maps => MAPS
Step:MAPS,click_mail => MAIL
Step:MAIL,click_web => WEB
Step:WEB,click_images => IMAGES
Step:IMAGES,click_maps => MAPS
}}}

If you run the script again, you'll probably get a slightly different output. Thats because the script is generating random walks, so each time it will likely make a different random choice of steps.


If all is well you should get a DOT file placed in the same folder called google_searches.dot